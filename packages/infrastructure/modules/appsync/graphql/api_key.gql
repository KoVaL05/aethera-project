type API_KEY {
  id: String!
  userId: String!
  keyType: String!
  createdAt: AWSTimestamp!
}

input ApiKeyFilterInput {
  id: TableStringFilterInput
  keyType: TableStringFilterInput
  createdAt: TableIntFilterInput
}

input TableIntFilterInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
}

input TableStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  size: ModelSizeInput
}

type Mutation {
  createApiKey(value: String!, type: String!): API_KEY @aws_cognito_user_pools
  updateApiKey(id: String!, value: String!): API_KEY @aws_cognito_user_pools
  deleteApiKey(id: String!): API_KEY @aws_cognito_user_pools
}

type Query {
  getApiKey(id: String!): API_KEY
  getAllApiKeys(
    filter: ApiKeyFilterInput
    limit: Int
    nextToken: String
  ): [API_KEY] @aws_cognito_user_pools @live
}

type Subscription {
  onApiKeyChange: API_KEY
    @aws_subscribe(mutations: ["createApiKey", "updateApiKey", "deleteApiKey"])
    @aws_cognito_user_pools
}
