type API_KEY {
  id: String!
  userId: String!
  keyType: String!
  createdAt: AWSTimestamp!
}

type API_KEY_ID {
  id: String!
  userId: String!
}

type Mutation {
  createApiKey(value: String!, type: String!): API_KEY @aws_cognito_user_pools
  updateApiKey(id: String!, value: String!): API_KEY @aws_cognito_user_pools
  deleteApiKey(id: String!): API_KEY_ID @aws_cognito_user_pools

  notifyDeleteApiKey(key: API_KEY!): API_KEY_ID @aws_iam
  notifyCreateApiKey(key: API_KEY!): API_KEY @aws_iam
  notifyUpdateApiKey(key: API_KEY!): API_KEY @aws_iam
}

type Query {
  getApiKey(id: String!): API_KEY @aws_cognito_user_pools
  getAllApiKeys(limit: Int, nextToken: String): [API_KEY]
    @aws_cognito_user_pools
}

type Subscription {
  onApiKeyCreate: API_KEY
    @aws_subscribe(mutations: ["notifyCreateApiKey"])
    @aws_cognito_user_pools
  onApiKeyDelete: API_KEY_ID
    @aws_subscribe(mutations: ["notifyDeleteApiKey"])
    @aws_cognito_user_pools
  onApiKeyUpdate: API_KEY
    @aws_subscribe(mutations: ["notifyUpdateApiKey"])
    @aws_cognito_user_pools
}
